stages:
  - composer
  - build
  - deploy

composer:
  stage: composer
  image: webdevops/php:ubuntu-16.04
  before_script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - mkdir .Build
    - curl -sS https://getcomposer.org/installer | php -- --install-dir=./ --filename=composer.phar
    - export COMPOSER_ALLOW_SUPERUSER=1
    - export COMPOSER_CACHE_DIR=/cache/composer
    - export COMPOSER_MIRROR_PATH_REPOS=1
    - export COMPOSER_NO_INTERACTION=1
  script:
    - ./composer.phar install --no-dev --prefer-dist --optimize-autoloader
    - rm -f Web/index.php
    - touch gitlab-ci-scripts/rsync-build-excludes.txt
    - >
      rsync -a ./ .Build/
      --exclude=/.Build
      --exclude=/.git
      --exclude=/.editorconfig
      --exclude=/.gitlab-ci.yml
      --exclude=/composer.json
      --exclude=/composer.lock
      --exclude=/composer.phar
      --exclude=/dynamicReturnTypeMeta.json
      --exclude-from=gitlab-ci-scripts/rsync-build-excludes.txt
    - if [ -f ./gitlab-ci-scripts/after-composer.sh ]; then cd .Build && ../gitlab-ci-scripts/after-composer.sh && cd -; fi
  artifacts:
    expire_in: 60 minutes
    paths:
      - .Build

build_extensions:
  stage: build
  image: node:7
  variables:
    NODE_ENV: production
  dependencies:
    - composer
  script:
    - if [ -f ./gitlab-ci-scripts/build-extensions.sh ]; then cd .Build && ../gitlab-ci-scripts/build-extensions.sh && cd -; fi
  artifacts:
    expire_in: 60 minutes
    paths:
      - .Build/Web/typo3conf/ext

prepare_typo3:
  stage: build
  image: webdevops/php:ubuntu-16.04
  script:
    - cp .Build/vendor/typo3/cms/index.php .Build/Web/index.php
    - cp .Build/vendor/smichaelsen/typo3-gitlab-ci/src/AdditionalConfiguration.php .Build/Web/typo3conf/
    - if [ -f .Build/Web/.htaccess.$CI_BUILD_REF_NAME ]; then cp .Build/Web/.htaccess.$CI_BUILD_REF_NAME .Build/Web/.htaccess ; fi
    - BRANCH=$CI_BUILD_REF_NAME
    - echo $'ENVNAME=\''$BRANCH$'\'' >> .Build/.env
    - echo $'GIT_REFERENCE=\''$CI_BUILD_REF$'\'' >> .Build/.env
    - DBNAME_VARIABLE=$BRANCH'_DBNAME'
    - echo $'DBNAME=\''"${!DBNAME_VARIABLE-`echo $DBNAME`}"$'\'' >> .Build/.env
    - DBUSER_VARIABLE=$BRANCH'_DBUSER'
    - echo $'DBUSER=\''"${!DBUSER_VARIABLE-`echo $DBUSER`}"$'\'' >> .Build/.env
    - DBPASS_VARIABLE=$BRANCH'_DBPASS'
    - echo $'DBPASS=\''"${!DBPASS_VARIABLE-`echo $DBPASS`}"$'\'' >> .Build/.env
    - DBHOST_VARIABLE=$BRANCH'_DBHOST'
    - echo $'DBHOST=\''"${!DBHOST_VARIABLE-`echo $DBHOST`}"$'\'' >> .Build/.env
    - IM_PATH_VARIABLE=$BRANCH'_IM_PATH'
    - echo $'IM_PATH=\''"${!IM_PATH_VARIABLE-`echo $IM_PATH`}"$'\'' >> .Build/.env
    - ENCRYPTION_KEY_VARIABLE=$BRANCH'_ENCRYPTION_KEY'
    - echo $'ENCRYPTION_KEY=\''"${!ENCRYPTION_KEY_VARIABLE-`echo $ENCRYPTION_KEY`}"$'\'' >> .Build/.env
    - INSTALL_TOOL_PASSWORD_VARIABLE=$BRANCH'_INSTALL_TOOL_PASSWORD'
    - echo $'INSTALL_TOOL_PASSWORD=\''"${!INSTALL_TOOL_PASSWORD_VARIABLE-`echo $INSTALL_TOOL_PASSWORD`}"$'\'' >> .Build/.env
    - php .Build/bin/typo3cms install:generatepackagestates
  dependencies:
    - composer
  artifacts:
    expire_in: 60 minutes
    paths:
      - .Build/.env
      - .Build/Web/.htaccess
      - .Build/Web/index.php
      - .Build/Web/typo3conf/AdditionalConfiguration.php
      - .Build/Web/typo3conf/PackageStates.php

deploy:
  stage: deploy
  dependencies:
    - composer
    - build_extensions
    - prepare_typo3
  environment: $CI_BUILD_REF_NAME
  image: webdevops/php:ubuntu-16.04
  before_script:
    - eval $(ssh-agent -s)
    - ssh-add <(echo "$SSH_PRIVATE_KEY")
    - mkdir -p ~/.ssh
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  script:
    - BRANCH=$CI_BUILD_REF_NAME
    - SSH_HOST_VARIABLE=$BRANCH'_SSH_HOST'
    - SSH_HOST="${!SSH_HOST_VARIABLE-`echo $SSH_HOST`}"
    - if [ -z "$SSH_HOST" ]; then echo $BRANCH' is not deployed because there is no variable '$SSH_HOST' configured.' && exit 0; fi
    - SSH_USERNAME_VARIABLE=$BRANCH'_SSH_USERNAME'
    - SSH_USERNAME="${!SSH_USERNAME_VARIABLE-`echo $SSH_USERNAME`}"

    - SSH_REMOTE_PATH_VARIABLE=$BRANCH'_SSH_REMOTE_PATH'
    - SSH_REMOTE_PATH=${!SSH_REMOTE_PATH_VARIABLE-`echo $SSH_REMOTE_PATH`}

    - if [ -f ./gitlab-ci-scripts/pre-deploy.sh ]; then cd .Build && ../gitlab-ci-scripts/pre-deploy.sh && cd -; fi

    - touch gitlab-ci-scripts/rsync-deploy-excludes.txt
    - >
      rsync -az -e "ssh" --delete
      --exclude=/backups
      --exclude=/gitlab-ci-scripts
      --exclude=/Web/.htaccess.*
      --exclude=/Web/fileadmin
      --exclude=/Web/typo3conf/l10n
      --exclude=/Web/typo3temp
      --exclude=/Web/uploads
      --exclude=.git
      --exclude=.gitattributes
      --exclude=.gitignore
      --exclude=*.md
      --exclude-from=gitlab-ci-scripts/rsync-deploy-excludes.txt
      .Build/ $SSH_USERNAME@$SSH_HOST:$SSH_REMOTE_PATH

    - PHP_BINARY_VARIABLE=$BRANCH'_PHP_BINARY'
    - PHP_BINARY="${!PHP_BINARY_VARIABLE-`echo $PHP_BINARY`}"
    - TYPO3_CONSOLE=$PHP_BINARY' '$SSH_REMOTE_PATH'bin/typo3cms'
    - >
        ssh $SSH_USERNAME@$SSH_HOST
        $TYPO3_CONSOLE' install:fixfolderstructure &&
        '$TYPO3_CONSOLE' cache:flush --force &&
        mkdir -p '$SSH_REMOTE_PATH'/backups/databases &&
        '$TYPO3_CONSOLE' database:export | gzip > '$SSH_REMOTE_PATH'/backups/databases/beforedeploy.gz &&
        '$TYPO3_CONSOLE' extension:setupactive &&
        '$TYPO3_CONSOLE' database:updateschema "safe" &&
        '$TYPO3_CONSOLE' upgrade:all &&
        '$TYPO3_CONSOLE' database:updateschema "destructive"'
